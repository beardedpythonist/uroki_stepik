#  Напишите программу, которая выводит максимальный элемент в заштрихованной области квадратной матрицы.

#Формат входных данных
#На вход программе подаётся натуральное число nn — количество строк и столбцов в матрице, затем элементы матрицы (целые числа) построчно через пробел.
#
#Формат выходных данных
#Программа должна вывести одно число — максимальный элемент в заштрихованной области квадратной матрицы.
#
#Примечание. Элементы диагоналей также учитываются.
#
n = int(input())
matrix = [0] * n
for i in range(n):
    matrix[i] = [] * n
s = ''
ls1 = []
for i in range(n):
    s = str(input())
    ls = s.split()
    for j in range(len(ls)):
        ls[j] = int(ls[j])
        matrix[i].append(ls[j])
for i in range(n):
    for j in range(n):
        if i >= j and (i <= (n - 1 - j)):
            ls1.append(matrix[i][j])
        if (i <= j) and (i >= n - 1 - j):
            ls1.append(matrix[i][j])

print(max(ls1))


Квадратная матрица разбивается на четыре четверти,
 ограниченные главной и побочной диагоналями: верхнюю, нижнюю, левую и правую.
Напишите программу, которая вычисляет сумму элементов: верхней четверти; правой четверти; нижней четверти; левой четверти.

Формат входных данных
На вход программе подаётся натуральное число nn — количество строк и столбцов в матрице, затем элементы матрицы (целые числа) построчно через пробел.

Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.

Примечание. Элементы диагоналей не учитываются.

n = int(input())
matrix = [0] * n
for i in range(n):
    matrix[i] = [] * n
s = ''

for i in range(n):
    s = str(input())
    ls = s.split()
    for j in range(len(ls)):
        ls[j] = int(ls[j])
        matrix[i].append(ls[j])
ls1 = []
ls2 = []
ls3 = []
ls4 = []
for i in range(n):
    for j in range(n):
        if i > j and (i < (n - 1 - j)):
            ls1.append(matrix[i][j])   #левый сбоку
        if (i < j) and (i > n - 1 - j):
            ls2.append(matrix[i][j])   # правй сбоку
        if (i < j) and i < (n - 1 - j):
            ls3.append(matrix[i][j])    #сверху
        if (i > j) and (i > n - 1 - j):
            ls4.append((matrix[i][j]))       # снизу
print('Верхняя четверть:', sum(ls3))
print('Правая четверть:', sum(ls2))
print('Нижняя четверть:', sum(ls4))
print('Левая четверть:', sum(ls1))

